#!/usr/bin/env bash
set -ex

if [ "$(uname)" == "Darwin" ]; then
    project_dir=$(greadlink -f "$(dirname $0)/../..")
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    project_dir=$(readlink -f "$(dirname $0)/../..")
else
    echo "Error: Unknown platform - $(uname -a)"
    exit 1
fi

# source $project_dir/ci/utils/load-bosh-env.sh

if [[ -z $CONCOURSE_URI || -z $CONCOURSE_TARGET || -z $CONCOURSE_USER || -z $CONCOURSE_PASSWORD || \
      -z $VAULT_ADDR || -z $VAULT_TOKEN || \
      -z $PIPELINE_REPO || -z $PIPELINE_REPO_PRIVATE_KEY_PATH || \
      -z $FOUNDATION_NAME || -z $PRODUCT_NAME ]]; then
  echo "one the following environment variables is not set: "
  echo ""
  echo "                 CONCOURSE_URI"
  echo "                 CONCOURSE_TARGET"
  echo "                 CONCOURSE_USER"
  echo "                 CONCOURSE_PASSWORD"
  echo "                 VAULT_ADDR"
  echo "                 VAULT_TOKEN"
  echo "                 CONFIG_REPO"
  echo "                 PIPELINE_REPO_PRIVATE_KEY_PATH"
  echo "                 FOUNDATION_NAME"
  echo ""
  exit 1
fi

PIPELINE_REPO_BRUNCH=${PIPELINE_REPO_BRANCH:-master}

echo "Updating $FOUNDATION_NAME management pipeline on $CONCOURSE_TARGET concourse."

fly -t $CONCOURSE_TARGET login -c $CONCOURSE_URI -u $CONCOURSE_USER -p $CONCOURSE_PASSWORD

fly -t $CONCOURSE_TARGET set-pipeline -p $PRODUCT_NAME-$FOUNDATION_NAME \
              --config="$project_dir/ci/pipeline.yml" \
              --var="vault-address=$VAULT_ADDR" \
              --var="vault-token=$VAULT_TOKEN" \
              --var="foundation-name=$FOUNDATION_NAME" \
              --var="pipeline-repo=$PIPELINE_REPO" \
              --var="pipeline-repo-branch=$PIPELINE_REPO_BRANCH" \
              --var="pipeline-repo-private-key=$(cat $PIPELINE_REPO_PRIVATE_KEY_PATH)" \
              --var="product-name=$PRODUCT_NAME"


fly -t $CONCOURSE_TARGET unpause-pipeline -p $PRODUCT_NAME-$FOUNDATION_NAME

echo "Done."
